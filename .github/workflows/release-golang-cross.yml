name: release golang-cross

on:
  release:
    types:
      - created

jobs:
  release:
    strategy:
      matrix:
        codename: [bullseye, bookworm]
    permissions:
      id-token: write
      packages: write
      contents: read
    runs-on: ubuntu-latest
    continue-on-error: false
    steps:
      - uses: actions/checkout@v4
      - uses: sigstore/cosign-installer@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Get Repo Owner
        id: get_repo_owner
        run: echo "repo_owner=$(echo ${{ github.repository_owner }} | tr '[:upper:]' '[:lower:]')" >> $GITHUB_OUTPUT
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ steps.get_repo_owner.outputs.repo_owner }}/golang-cross
          tags: |
            type=raw,value=latest,enable=${{ matrix.codename == 'bookworm' && (github.event.release.target_commitish == 'main' || github.event.release.target_commitish == 'master') }}
            type=semver,pattern={{raw}},enable=${{ matrix.codename == 'bookworm' }}
            type=semver,pattern={{version}},enable=${{ matrix.codename == 'bookworm' }}
            type=semver,pattern={{major}}.{{minor}},enable=${{ matrix.codename == 'bookworm' }}
            type=semver,pattern={{major}},enable=${{ matrix.codename == 'bookworm' }}
            type=semver,pattern={{raw}},enable=${{ matrix.codename != 'bookworm' }},suffix=-${{ matrix.codename }}
            type=semver,pattern={{version}},enable=${{ matrix.codename != 'bookworm' }},suffix=-${{ matrix.codename }}
      - name: Login to GitHub Container Registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ steps.get_repo_owner.outputs.repo_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v6
        id: buildpush
        with:
          context: .
          build-args: |
            OS_CODENAME=${{ matrix.codename }}
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
      - name: Sign the images
        run: |
          echo "sign ${{ steps.buildpush.outputs.digest }}"
          cosign sign --yes "ghcr.io/${{ steps.get_repo_owner.outputs.repo_owner }}/golang-cross@${{ steps.buildpush.outputs.digest }}"
        shell: bash
        env:
          DOCKER_PASSWD: ${{ secrets.GITHUB_TOKEN }}
